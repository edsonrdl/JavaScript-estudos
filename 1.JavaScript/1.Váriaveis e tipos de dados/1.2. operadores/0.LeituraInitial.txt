
 Operador/A	   Descrição	          Exemplo

 +	           Adição	              A + B = 30
 –	           Subtração	          A – B = -10
 *	           Multiplicação	      A * B = 200
 /	           Divisão	              B / A = 2
 %	           Módulo                (resto da divisão)	B % A = 0
 ++	           Incremento	         A++ = 11  ou (var x=3) (x=x+5 equivale x+=5)R=8 
 —	           Decremento	         A– = 9    ou (var y=2) (y=y-5 equivale y-=5)R=-3
 **            Potenciação           A**A=16

------------------------------------------------------------------------------------------------------
 Operador/lóg	Operação	          Exemplo
 >	            Maior que	         (a > b)
 <	            Menor que	         (a < b)
 >=	            Maior ou igual a	 (a >= b)
 <=	            Menor ou igual a	 (a <= b)
 ==	            Igual a	             (a == b)
 !=             Diferente de	     (a !== b)
 ===	        Idêntico a	         (a === b)
 !==            Não idêntico a	     (a !== b)
 &&	            E/and	             (a && b)
 ll	            Ou/or	          

------------------------------------------------------------------------------------------------------
Ordem de precedencia de cima para baixo
       não  ()
       .    **
       e    *  /  % 
       ou   +  
       ()   > < <= >=
       !
       &&
       ||

------------------------------------------------------------------------------------------------------
Diferença entre “==”(TESTA O VALOR) e “===”(TESTA O TIPO E O VALOR )
É possível perceber na tabela acima, que existe tanto o símbolo de “igual a” (==), quanto o de “idêntico a” (===). Mas qual eu devo utilizar para cada situação? Se usarmos o operador “==” em uma condição, saberemos que ela só será verdadeira se o valor da esquerda for o mesmo valor da direita, por exemplo:

javascript

if (true == “true”) //retorna true

if (10 == “10”) //retorna true

if (true == true) //retorna true

if (10 == 10) //retorna true

Mas suponha que seja preciso fazer essa validação tendo certeza de que o número da direita é realmente um número, e não apenas possui o mesmo caractere. O que fazemos?

É nessa hora que entra o símbolo de “idêntico a” (===). Ele não só compara os valores dos dois lados da equação, como também verifica se eles são do mesmo tipo. Por exemplo:

javascript
if (true === “true”) //retorna false

if (10 === “10”) //retorna false

if (true === true) //retorna true

if (10 === 10) //retorna tr

E assim como os operadores “==” e “===”, usamos a mesma lógica para os seus inversos “!=” e “!==”. Veja a segui

if (true != “true”) //retorna false

if (4 != “4”) //retorna false

if (true !== “true”) //retorna true

if (4 !== “4”) //retorna true

if (true !== true) //retorna false

if (4 !== 4) //retorna false